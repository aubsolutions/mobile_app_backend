from fastapi import FastAPI, HTTPException, Request
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel

from database import engine
from models import Base
from routes import invoice
from fastapi.responses import JSONResponse



app = FastAPI(
    default_response_class=JSONResponse
)
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤
app.include_router(invoice.router)

# CORS middleware (–æ—Å—Ç–∞–≤–ª—è–µ–º –æ–¥–∏–Ω —Ä–∞–∑!)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # ‚ö†Ô∏è –Ω–∞ –ø—Ä–æ–¥–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–æ–º–µ–Ω
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
Base.metadata.create_all(bind=engine)

# –†–æ—É—Ç –ª–æ–≥–∏–Ω–∞
class LoginRequest(BaseModel):
    phone: str
    password: str

@app.post("/login")
def login(data: LoginRequest):
    print(f"üî• –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ª–æ–≥–∏–Ω: phone={data.phone}, password={data.password}")
    if data.phone == "77001234567" and data.password == "qwerty":
        return {"token": "fake-jwt-token"}
    raise HTTPException(status_code=401, detail="Invalid credentials")

@app.get("/")
def health():
    return {"status": "ok"}


