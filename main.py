from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import JSONResponse
from pydantic import BaseModel

from database import engine
from models import Base
from routes import invoice, auth

# üëá –ö–∞—Å—Ç–æ–º–Ω—ã–π JSON-–æ—Ç–≤–µ—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
class UTF8JSONResponse(JSONResponse):
    media_type = "application/json; charset=utf-8"

# üëá –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(default_response_class=UTF8JSONResponse)

# üëá –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ (–æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ)
Base.metadata.create_all(bind=engine)

# üëá –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ CORS (–æ–¥–∏–Ω —Ä–∞–∑!)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # ‚ö†Ô∏è –ù–∞ –ø—Ä–æ–¥–µ —É–∫–∞–∂–∏ –¥–æ–º–µ–Ω
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# üëá –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤
app.include_router(invoice.router)
app.include_router(auth.router)

# üëá –ó–∞–≥–ª—É—à–∫–∞ –ª–æ–≥–∏–Ω–∞ (–≤—Ä–µ–º–µ–Ω–Ω–æ)
class LoginRequest(BaseModel):
    phone: str
    password: str

@app.post("/login")
def login(data: LoginRequest):
    print(f"üî• –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ª–æ–≥–∏–Ω: phone={data.phone}, password={data.password}")
    if data.phone == "77001234567" and data.password == "qwerty":
        return {"token": "fake-jwt-token"}
    raise HTTPException(status_code=401, detail="Invalid credentials")

# üëá –ü–∏–Ω–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
@app.get("/")
def health():
    return {"status": "ok"}
